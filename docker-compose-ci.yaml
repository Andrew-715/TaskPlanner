version: '3.8'

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    ports:
      - 81:80
    depends_on:
      api:
        condition: service_started

  api:
    image: icealpine/taskplanner:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    restart: always
    ports:
      - 80:8000
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    image: icealpine/taskplanner:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: >
      sh -c "python ./manage.py migrate"

  bot:
    image: icealpine/taskplanner:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    command:
      python ./manage.py runbot

  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    volumes:
      - TaskPlanner_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $DATABASE_USER -d $DATABASE_NAME
      timeout: 3s
      interval: 4s
      retries: 10

volumes:
  TaskPlanner_data:
